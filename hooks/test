#!/bin/bash -xe

trap "echo Exited!; exit;" SIGINT SIGTERM
if command -v gsed; then SED="gsed"; else SED="sed"; fi

function buildAndTest() {
  YML=$1
  ARG=$2
  CMD="docker-compose -f test/$YML build $ARG"
  if ! $CMD; then
    echo "Failed: \"$CMD\""
    exit 1
  fi

  DOWN="docker-compose -f test/$YML down -v"
  CMD="docker-compose -f test/$YML up --no-build --abort-on-container-exit sut"
  if ! $CMD; then
    echo "Failed: \"$CMD\""
    $DOWN &> /dev/null || true
    exit 1
  fi
  $DOWN &> /dev/null || true
}

function testNormal() {
  buildAndTest docker-compose.bats.test.yml
  buildAndTest docker-compose.bats.custom-ssl.test.yml
  buildAndTest docker-compose.puppeteer.test.yml
  buildAndTest docker-compose.puppeteer.no-phpmyadmin.test.yml
}

function testLiveDB() {
  NO_MARIA_DB="docker-compose.puppeteer.no-mariadb.test.yml"

  function databaseUp() {
    docker-compose -f "test/$NO_MARIA_DB" up -d -V --force-recreate --remove-orphans mariadb
  }
  function databaseDown() {
    docker-compose -f "test/$NO_MARIA_DB" down -v
  }
  function insertDatabaseGatewayIP() {
    IP_ADDR="$(docker network inspect ispconfig_default | grep "Gateway" | sed 's|^.*"Gateway": "\(.*\)"$|\1|')"
    $SED -i'' "s/database: .*$/database: $IP_ADDR/" "test/$NO_MARIA_DB"
  }

  databaseUp
  insertDatabaseGatewayIP
  buildAndTest "$NO_MARIA_DB" --no-cache
  databaseDown
}

testNormal
testLiveDB
