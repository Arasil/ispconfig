#!/bin/bash

MUSER="root"
TARGET=/service/mig

_usage()
{
  echo "  # Migration:"
  echo "  mig export                               # export data"
  echo "  mig import                               # import data"
  exit 0
}
if [ "$1" = "" ] ; then 
  _usage
fi

if [ "$1" != "export" -a "$1" != "import" ] ; then
  _usage
fi
#############################################################################################
# magic main
#############################################################################################

PWFI=/docker-extensions/.mysql_root_pw

if [ ! -e "$PWFI" ] ; then
   echo "mysql root password not set in <$PWFI>. Set it to <pass>!!!"
   echo "MYSQL_ROOT_PW=\"pass\"" > $PWFI
fi
. $PWFI

if [ "$1" = "export" ] ; then

  echo "remove existing export directory <$TARGET> ..."
  rm -Rf $TARGET
  mkdir -p $TARGET
  #
  # passwd, shadow, group
  #
  echo "extract ispconfig entries from passwd, shadow and group"
  grep "^web[0-9]*:"                       /etc/passwd  > $TARGET/passwd.ispconfig
  grep "^web[0-9]*:"                       /etc/shadow  > $TARGET/shadow.ispconfig
  grep -e "^client[0-9]*:" -e "^sshusers:" /etc/group   > $TARGET/group.ispconfig
  #
  # databases
  #
  DBS="$(mysql -u $MUSER -p${MYSQL_ROOT_PW} -Bse 'show databases')"
  mkdir -p $TARGET/sql
  for db in $DBS ; do
    if [ "$db" != "mysql" -a "$db" != "information_schema" -a "$db" != "performance_schema" ] ; then
      echo "exporting database <$db> ..." 
      mysqldump -u root --password=${MYSQL_ROOT_PW} $db --single-transaction > "$TARGET/sql/$db.sql"
    fi
  done
  #
  # others
  #
  echo "create a archive with the remaining configuration files (apache,..):"
  list="/var/log/ispconfig/httpd  /etc/apache2/sites-available /etc/apache2/sites-enabled /docker-extensions"
  for i in $list ; do
    echo "   <$i>"
  done
  tar  -C / -czpf $TARGET/rootfs.tgz $list 
  echo ""
  echo "config data exported to <$TARGET>."
  echo ""
  exit 0
fi

#
#
#
if [ "$1" = "import" ] ; then
  
  cd /

  supervisorctl stop apache
  supervisorctl stop postfix
  supervisorctl stop dovecot
  

  list="passwd shadow group"
  for i in $list ; do
    cat  /etc/${i} ${TARGET}/${i}.ispconfig | uniq > /tmp/.t
    diff /etc/${i}  /tmp/.t
    cp /tmp/.t /etc/${i}
    rm /tmp/.t
  done
  
  tar -C / -xzvf $TARGET/rootfs.tgz
  . $PWFI

  echo "set mysql $MUSER password to <${MYSQL_ROOT_PW}>. Read from <$PWFI> ..."
  mysqladmin -u $MUSER -ppass password ${MYSQL_ROOT_PW}
  list=$(ls -d -1 $TARGET/sql/*)
  echo $list
  for i in $list ; do
    db=`basename $i`
    db=${db%.sql}
    echo "restoring database <$db> from <$i> ..."
    mysql -u $MUSER -p${MYSQL_ROOT_PW} $db < ${i}      
  done

  echo "set password for ispconfig in mysql database like in /usr/local/ispconfig/interface/lib/config.inc.php"
  PW_INC=$(grep "^\$conf\['db_password'\]"  /usr/local/ispconfig/interface/lib/config.inc.php | cut -d\' -f4)
  echo "  password in config.inc.php : <$PW_INC>"
  echo "update user set Password = PASSWORD(\"${PW_INC}\") WHERE User = 'ispconfig';" | mysql -u $MUSER -p${MYSQL_ROOT_PW} mysql
 
  echo "TODO:"
  echo " svn stuff: find /var/www -name svn -type d"
  echo " courier to dovecot: /etc/dovecot/conf.d/????.conf"
    #  #vi /etc/dovecot/conf.d/15-mok.conf
    #namespace {
    #  prefix = INBOX.
    #  separator = .
    #  inbox = yes
    #}
fi




 
